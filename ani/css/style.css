@charset "UTF-8";

@import url('https://fonts.googleapis.com/css2?family=Nanum+Pen+Script&family=Noto+Sans+KR:wght@300;500;700&display=swap');

* {
    margin: 0;
    padding: 0;
}

body {
    background-color: lightgray;
}

.box1 {
    background-color: white;
    margin-top: 100px;
}

.box1 .child {
    width: 300px;
    background-color: orangered;
    margin: 0 auto;
    padding: 30px 0;
    font-size: 30px;
    color: white;
    font-weight: bold;
    text-align: center;
    border-radius: 20px; 
    border: 10px solid orangered;
    /* 모서리 깎는건데 정확하게는 원의 반지름을 말함
    수치를 50%를 주면 원이 됨. */

/*  transition-property: background-color;
    transition-duration: 0.3s;
    transition-delay: 0.5s;
    transition-timing-function: ease; 
    이것을 축약한 명령어가 밑의 명령어이다.*/

 /*    transition: background-color 0.3s 0.5s ease, /* 주석a와 관련된 명령어 */
    /* transform 0.4s 0.8s ease; */  /* 주석b와 관련된 명령어 */

/*  먼저 나온값이 duration 뒤가 delay임
    값 순서 바꾸면 안됨.  다만 delay값은 ease뒤에 있어돗 상관없다. 
    듀레이션 앞에만 안오면 됨. */

    /* transition: all 0.3s 0.2s ease; */ 
    /* transition: 0.3s 0.2s ease; */ /* all이 생략된거임 생략가능 */
    transition: 0.3s; /* 나머지는 빠져도 되지만 duraition 이거는 빠지면 안됨 */

/*     transition은 축약
    되어있는 명령이고 앞에있는게 duration 뒤에 시간이 delay라고 알아두면 될듯; */
}

.box1:hover .child {
    background-color: bisque; /* a */
    transform: translateY(-30px); /* b */
} 

.box2 {
    width: 400px;
    margin: 50px auto 0;
    background-color: aquamarine;
    color:#222;
    text-align: center;
    line-height: 2.5; /* 행간 */
    overflow: hidden;
    font-weight: 500;
    /* font-family: 'Noto Sans KR', sans-serif; */ /* 궁서체같이 획옆에붙는 가독성떨어지는거 없애주는것 */
}

.box2 p {
    transform: translateX(-100%); /* block요소여야지만 이동이 됨. 그게 아닐경우
    포지션 앱솔루트를 써야함  */
    transition: 0.3s;
}

.box2 p.one {
    transition-delay: 0.3s;
}

.box2 p.two {
    transition-delay: 0.6s;
}

.box2 p.three {
    transition-delay: 0.9s;
}

.box2:hover p {
    transform: translateX(0%);
}

.box3 {
    background-color: #22A39F;
    font-size: 30px;
    color: white;
    width: 100px;
    height: 100px;
    text-align: center;
    line-height: 90px;
    margin-top: 50px;
    
    animation-name: box_ani; 
    /* keyframes의 이름과 반드시 동일해야 함. */
    animation-duration: 2s;
    /* 애니메이션의 지속 시간 */
    animation-iteration-count: 3;
    /* 반복횟수, 3번반복 */
    /* animation-direction: alternate; */
    /* 애니메이션의 방향을 뜻하며 기본값은 normal이다.
    alternate: 정방향->역방향 왔다갔다 하는 효과 */

    /* animation-direction: alternate-reverse; */
    /* 반대로 역->정->역->정 반복  */

    /* animation-direction: reverse; */
    /* 시작이 반대로 */
    animation-direction: normal;
    animation-delay: 1s;
    animation-timing-function: linear;
    /* 속도 조절하는 기능을 가졌고 특정 부분을 빠르게 특정 부분을 느리게 하는식으로
       조정도 가능하다. == 애니메이션의 가속도
       linear는 일정한 속도로 하겟다는 뜻 */

    /* animation-fill-mode: forwards; */
    /* 애니메이션의 처음과 끝의 상태 
    forwards는 애니가 끝난 상태(지점)에서 멈춤. */

    /* animation-fill-mode: backwards; */
    /* backwards는 시작을 keyframes의 0%상태부터 시작.(마진을줬으면 그 마진준값부터 애니가
    대기하고있다.) */

    animation-fill-mode: both;
    /* both -> forwards+backwads */


    /* animation-iteration-count: infinite;  */
    /* 무한반복 */

    /*박스를 혼자 움직이게 할려면 position을 줘야하고 주변에 아무런 영향을
    주지 않는 relaitve를 쓰는게 좋다. */
    /* 다만 transform을 쓰면 포지션없어도 되긴하는데 block레벨만 먹힘; */
}

@keyframes box_ani {
    /* 시작지점 */
    /* from === 0% */ 
    0% {
        margin-left: 100px;
    } 
    /* 도착지점 
    to === 100%*/ 
    100% {
        margin-left: 400px;
    }
}

.box4 {
    margin: 100px 0 400px;
    font-size: 30px;
    text-align: center;
    width: 100px; height: 100px;
    line-height: 100px;
    background-color: #BA94D1;
    color: white;
/*  animation-name: box_ani2; 
    animation-duration: 4s;
    animation-iteration-count: infinite;
    animation-direction: normal;
    animation-delay: 1s;
    animation-timing-function: linear;
    animation-fill-mode: both; */ 

    animation: box_ani2 4s linear 1s infinite both;
}

@keyframes box_ani2 {
    0% {
        transform: translate(100px,0);
    }
    25% {
        transform: translate(300px,0);
    }
    50% {
        transform: translate(300px,200px);
    }
    75% {
        transform: translate(100px,200px);
    }
    100% {
        transform: translate(100px,0);
    }
}

.clear::after {
    content: "";
    display: block;
    clear: both;
}

.box5 {
    width: 1000px;
    background-color: rgb(169, 91, 91);
    padding: 20px;
    margin: 0 auto;
    perspective: 600px; /* 원근감 주는 효과 */
}

.box5>div {
    float: left;
    width: 49%; height: 300px;
    background-color: rgb(86, 201, 86);
}

.box5>div.child_1 {
    margin-right: 2%;
    position: relative;
    transform-style: preserve-3d;
    /* 빼도 효과는 적용되나 반드시 표기하는게 좋음. */
}

.box5>div.child_1 .ro {
    background-color: rgb(107, 17, 107);
    position: absolute;
    left: 55%; top: 35%;
    padding: 20px 30px;
    font-size: 40px;
    color: white;
    transform: translateZ(300px) rotateY(45deg); /* y가 중심축이라는 말 */ 
    /* deg는 degree약자 각도 */
    transform-origin: left center; /* 중식축의 위치만 옮기는거 */
}

.box5>div.child_2 {
    position: relative;
    perspective: 600px;
}

.box5>div.child_2 .top {
    position: absolute;
    left: 50%; top: 50%;
    transform: translate(-50%,-50%);
    font-size: 50px;
    font-weight: bold;
    text-align: center;
    color: #222;
    transform-style: preserve-3d; 
    /* 중간단계인 아이들에게 모두 준다. */
}

.box5>div.child_2 .top div {
    transform: translateY(100%) rotateX(-80deg);
    transform-origin: center top;
    opacity: 0;
    transition: 0.8s cubic-bezier(0.03, 0.18, 0.01, 1.18);
}

.box5>div.child_2:hover .top div:first-child {
    /* top의 자식 div중 첫째 */
    opacity: 1;
    transform: none;
    transition-delay: 0.2s;
    /* 효과 없애는 명령어, 원 상태로 돌아오게 된다. */
}

.box5>div.child_2:hover .top div:last-child {
    /* top의 자식 div중 막내 */
    opacity: 1;
    transform: none;
    transition-delay: 0.4s;
}